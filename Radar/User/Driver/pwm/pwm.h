/*
 * pwm.h
 *
 *  Created on: Jan 14, 2019
 *      Author: xianghe
 */

#ifndef USER_DRIVER_PWM_PWM_H_
#define USER_DRIVER_PWM_PWM_H_



/*
*********************************************************************************************************
*                                            INCLUDE FILES
*********************************************************************************************************
*/



/*
*********************************************************************************************************
*                                               DEFINES
*********************************************************************************************************
*/



/*
*********************************************************************************************************
*                                             DATA TYPES
*********************************************************************************************************
*/

typedef enum
{
	PWM_NULL 	= 0,
	PWM_ENABLE 	= 1,
	PWM_LOW 	= 2,
	PWM_HIGH 	= 3,
} PWM_SRARUS_Type;

/*
*********************************************************************************************************
*                                          GLOBAL VARIABLES
*********************************************************************************************************
*/

extern PWM_SRARUS_Type PWM_STATE;


/*
*********************************************************************************************************
*                                               MACRO'S
*********************************************************************************************************
*/




/*
*********************************************************************************************************
*                                         FUNCTION PROTOTYPES
*********************************************************************************************************
*/

/*void PWM_Init(void);
void PWM_Update(void);

void PWM_SetState(PWM_SRARUS_Type state);
void PWM_GetState(PWM_SRARUS_Type *state);*/

void PWM_Start(void);
void PWM_Stop(void);


/*
*********************************************************************************************************
*                                               END
*********************************************************************************************************
*/

#endif /* USER_DRIVER_PWM_PWM_H_ */
